export DANDY_ENV="richard_local"
export DANDY_PATH="$HOME/dev/dandy"
export DANDY_CONFIG_PATH="$DANDY_PATH/dandy-config-files/lib"

alias cddy="cd $DANDY_PATH"

function arimuscp {
    ARIMUS_PATH=$HOME/dev/arimuscorp
    ARIMUS_NODE_MODULES_PATH=$DANDY_PATH/dandy-app/node_modules/\@arimuscorp
    if [ ! -d "$ARIMUS_PATH" ]; then
        printf "$ARIMUS_PATH not found, creating"
        mkdir $ARIMUS_PATH
        cd $ARIMUS_PATH
        git init
        git remote add origin git@github.com:richytong/arimuscorp
        git pull origin master
        cd -
    fi
    printf "copying into $ARIMUS_PATH \n$(ls $ARIMUS_NODE_MODULES_PATH)"
    rm -rf $ARIMUS_PATH/*
    cp -r $ARIMUS_NODE_MODULES_PATH/* $ARIMUS_PATH
    cd $ARIMUS_PATH
    printf "\n\n$(git diff .)\n\n$(git status)\n"
    cd - > /dev/null
}

alias sublimearimus="sublime ./node_modules/\@arimuscorp"

function ddy__ssh__dev {
    ssh ubuntu@ec2-34-203-252-200.compute-1.amazonaws.com
}

function ddy__git__pull {
    CUR_PATH=$(pwd)
    for i in $(ls $DANDY_PATH); do
        printf "syncing master for $i\n"
        cd $DANDY_PATH/$i
        git checkout master > /dev/null
        git pull origin master
        printf "\n"
    done
    cd $CUR_PATH
}

function ddy__git__s {
    CUR_PATH=$(pwd)
    for i in $(ls $DANDY_PATH); do
        printf '\e[1;34m%-6s\e[m\n' "$i"
        cd $DANDY_PATH/$i
        git status -bs
    done
    cd $CUR_PATH    
}

function ddy__es__up {
    docker run -p 9200:9200 -d -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:6.5.4
}

function ddy__es__down {
    docker ps -a | grep docker.elastic.co/elasticsearch/elasticsearch:6.5.4 | awk '{print $1}' | xargs docker rm -f
}

function ddy__es__createindex {
    curl -X PUT localhost:9200/party  \
    -H 'Content-Type: application/json' \
    -d @- <<HEREDOC
{
    "mappings": {
        "party": {
            "properties": {
                "groups": {
                    "type": "nested",
                    "properties": {
                        "_id": {
                            "type": "keyword"
                        }
                    }
                },
                "age_range": {
                    "type": "integer_range"
                },
                "location": {
                    "type": "geo_point"
                },
                "start_time": {
                    "type": "date",
                    "format": "epoch_millis"
                },
                "end_time": {
                    "type": "date",
                    "format": "epoch_millis"
                },
                "time_frame": {
                    "type": "date_range",
                    "format": "epoch_millis"
                }
            }
        }
    }
}
HEREDOC
}

function ddy__es__getall {
    curl -X GET localhost:9200/party/_search \
    -H 'Content-Type: application/json' \
    -d @- <<HEREDOC
{
    "query": {
        "match_all": {}
    }
}
HEREDOC
}

function ddy__testcov {
    nyc --cwd=$DANDY_PATH --exclude=dandy-test dandytest
}

function ddy {
    local modname=$1;
    local cmdname=$2;
    shift
    if test -z "$cmdname"; then
        if type "ddy__${modname}" >/dev/null 2>&1; then
            "ddy__${modname}" "$@"
        fi
    else
        shift
        if type "ddy__${modname}__${cmdname}" >/dev/null 2>&1; then
            "ddy__${modname}__${cmdname}" "$@"
        fi
    fi
}
