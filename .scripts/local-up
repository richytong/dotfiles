#!/usr/bin/env node

const forEach = require('rubico/x/forEach')
const DockerContainer = require('presidium/DockerContainer')

forEach(async options => {
  const status = await DockerContainer(options).start()
  console.log(options.name, '-', status.message)
})([
  {
    name: 'dynamo',
    image: 'amazon/dynamodb-local:1.15.0',
    publish: { 8000: 8000 },
  },
  {
    name: 'mongo',
    image: 'mongo:4.0.6-xenial',
    publish: { 27017: 27017 },
  },
  {
    name: 'redis',
    image: 'redis:6.0.9',
    publish: { 6379: 6379 },
  },
  {
    name: 'elasticsearch',
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.9.3',
    publish: { 9200: 9200 },
    memory: 512e9,
    env: {
      'discovery.type': 'single-node',
      'ES_JAVA_OPTS': '-Xms256m -Xmx256m',
    },
  },
  {
    name: 'gremlin',
    image: 'tinkerpop/gremlin-server:3.4.4',
    publish: { 8182: 8182 },
  },
  {
    name: 's3',
    image: 'minio/minio:edge-cicd',
    publish: { 9000: 9000 },
    env: {
      MINIO_ACCESS_KEY: 'AKIARMTQKGLFIIYQIS44',
      MINIO_SECRET_KEY: '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',
    },
    cmd: ['server', '/data'],
  },
  {
    name: 'registry',
    image: 'registry:2.7',
    publish: { 5000: 5000 },
    restart: 'always',
  },
  {
    name: 'kinesis',
    image: 'saidsef/aws-kinesis-local:latest',
    publish: { 4567: 4567 },
  },
])
