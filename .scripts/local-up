#!/usr/bin/env node

const pipe = require('rubico/pipe')
const map = require('rubico/map')
const tryCatch = require('rubico/tryCatch')
const DockerContainer = require('presidium/DockerContainer')

const containers = [
  DockerContainer('dynamo', {
    image: 'amazon/dynamodb-local:1.13.5',
    publish: { 8000: 8000 },
  }),

  DockerContainer('mongo', {
    image: 'mongo:4.0.6-xenial',
    publish: { 27017: 27017 },
  }),

  DockerContainer('redis', {
    image: 'redis:6.0.9',
    publish: { 6379: 6379 },
  }),

  DockerContainer('elasticsearch', {
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.1.0',
    publish: { 9200: 9200 },
    memory: 512e9,
    env: {
      'discovery.type': 'single-node',
      'ES_JAVA_OPTS': '-Xms256m -Xmx256m',
    },
  }),

  DockerContainer('gremlin', {
    image: 'tinkerpop/gremlin-server:3.4.4',
    publish: { 8182: 8182 },
  }),

  DockerContainer('s3', {
    image: 'minio/minio:edge',
    publish: { 9000: 9000 },
    env: {
      MINIO_ACCESS_KEY: 'accessKey',
      MINIO_SECRET_KEY: 'secretKey',
    },
    cmd: ['server', '/data'],
  }),

  DockerContainer('registry', {
    image: 'registry:2.7',
    publish: { 5000: 5000 },
    restart: 'always',
  }),
]

map(pipe([
  tryCatch(
    async container => {
      const status = await container.start()
      console.log(container.name, '-', status.message)
    },
    error => {
      // if (error.message.includes)
      console.log('error', error)
    },
  )
]))(containers)
